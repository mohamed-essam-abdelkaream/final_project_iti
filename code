import 'dart:math';

import 'package:calorie_calculator/firstScreen.dart';
import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: firstScreen(),
    );
  }
}
//000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
class firstScreen extends StatelessWidget{
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Container(
        color: Colors.white,
        child: SafeArea(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Image(image: AssetImage('images/222.png')),
              Padding(
                padding: const EdgeInsets.all(15.0),
                child: TextFormField(
                  decoration:InputDecoration(
                      border: OutlineInputBorder(borderRadius: BorderRadius.circular(10)),
                      labelText: 'enter your name',
                      prefixIcon: Icon(Icons.person)
                  ),
                ),
              ),
              Padding(
                padding: const EdgeInsets.all(15.0),
                child: TextFormField(
                  decoration:InputDecoration(
                      border: OutlineInputBorder(borderRadius: BorderRadius.circular(10)),
                      labelText: 'Enter Your Number',
                      prefixIcon: Icon(Icons.phone_android)
                  ),
                  keyboardType: TextInputType.number,

                ),
              ),
              Row(
                children: [
                  Expanded(
                    child: Padding(
                      padding: const EdgeInsets.all(15.0),
                      child: GestureDetector(
                        onTap: (){
                          Navigator.push(
                              context,
                              MaterialPageRoute(
                                  builder: (Content) => calc_Screen()));
                        },
                        child: Container(
                          width: 70,
                          height: 30,
                          decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(10),
                            color: Colors.blue,
                          ),
                          child: Center(child: Text('log In')),
                        ),
                      ),
                    ),
                  ),
                  Expanded(
                    child: Padding(
                      padding: const EdgeInsets.all(15.0),
                      child: GestureDetector(
                        onTap: (){
                          Navigator.push(
                              context,
                              MaterialPageRoute(
                                  builder: (Content) => SignUp()));
                        },
                        child: Container(
                          width: 70,
                          height: 30,
                          decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(10),
                            color: Colors.grey,
                          ),
                          child: Center(child: Text('Sign Up')),
                        ),
                      ),
                    ),
                  ),
                ],
              )
            ],
          ),
        ),
      ),
    );
  }
}
//0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
class SignUp extends StatelessWidget{
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: Container(
          color: Colors.white,
          child: SafeArea(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                Image(image: AssetImage('images/222.png')),
                Padding(
                  padding: const EdgeInsets.all(15.0),
                  child: TextFormField(
                    decoration:InputDecoration(
                        border: OutlineInputBorder(borderRadius: BorderRadius.circular(10)),
                        labelText: 'enter your first name',
                        prefixIcon: Icon(Icons.person)
                    ),
                  ),
                ),
                Padding(
                  padding: const EdgeInsets.all(15.0),
                  child: TextFormField(
                    decoration:InputDecoration(
                        border: OutlineInputBorder(borderRadius: BorderRadius.circular(10)),
                        labelText: 'enter your Second name',
                        prefixIcon: Icon(Icons.person)
                    ),
                  ),
                ),
                Padding(
                  padding: const EdgeInsets.all(15.0),
                  child: TextFormField(
                    decoration:InputDecoration(
                        border: OutlineInputBorder(borderRadius: BorderRadius.circular(10)),
                        labelText: 'Enter Your Number',
                        prefixIcon: Icon(Icons.phone_android)
                    ),
                    keyboardType: TextInputType.number,

                  ),
                ),
                Row(
                  children: [
                    Expanded(
                      child: Padding(
                        padding: const EdgeInsets.all(15.0),
                        child: GestureDetector(
                          onTap: (){
                            Navigator.push(
                                context,
                                MaterialPageRoute(
                                    builder: (Content) => calc_Screen()));
                          },
                          child: Container(
                            width: 70,
                            height: 30,
                            decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(10),
                              color: Colors.blue,
                            ),
                            child: Center(child: Text('log In')),
                          ),
                        ),
                      ),
                    ),
                  ],
                )
              ],
            ),
          ),
        ),
      ),
    );
  }
}
//0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
class calc_Screen extends StatefulWidget{
  @override
  State<calc_Screen> createState() => _calc_ScreenState();
}

class _calc_ScreenState extends State<calc_Screen> {

  bool isMale = true;
  double height = 100;
  int age = 20;
  int weight = 50;
  var gender = 'male';
  int result = 30;
  @override
  Widget build(BuildContext context) {
    return SafeArea(
      child: Scaffold(
        body: Column(
          children: [
            Expanded(
              child: Row(
                children: [
                  Expanded(
                    child: Padding(
                      padding: const EdgeInsets.all(12.0),
                      child: GestureDetector(
                        onTap: () {
                          setState(() {
                            isMale = true;
                          });
                        },
                        child: Container(
                          decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(15.0),
                              color: isMale
                                  ? Colors.blueAccent
                                  : Colors.yellow[100]),
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.center,
                            children: [
                              Icon(
                                Icons.male,
                                size: 60.0,
                              ),
                              Text(
                                'Male',
                                style: TextStyle(
                                    fontFamily: 'Nosifer-Regular',
                                    fontSize: 30.0),
                              )
                            ],
                          ),
                        ),
                      ),
                    ),
                  ),
                  Expanded(
                    child: Padding(
                      padding: const EdgeInsets.all(12.0),
                      child: GestureDetector(
                        onTap: () {
                          setState(() {
                            isMale = false;
                          });
                        },
                        child: Container(
                          decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(15.0),
                            color: isMale
                                ? Colors.yellow[100]
                                : Colors.blue,
                          ),
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.center,
                            children: [
                              Icon(
                                Icons.female,
                                size: 60.0,
                              ),
                              Text(
                                'female',
                                style: TextStyle(
                                    fontFamily: 'Nosifer-Regular',
                                    fontSize: 25.0),
                              )
                            ],
                          ),
                        ),
                      ),
                    ),
                  ),
                ],
              ),
            ),
            Expanded(
              child: Padding(
                padding: const EdgeInsets.all(12.0),
                child: Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.yellow[100],
                  ),
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Text(
                        'Height',
                        style: TextStyle(
                            fontFamily: 'Nosifer-Regular', fontSize: 30.0),
                      ),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Text(
                            '${height.round()}',
                            style: TextStyle(
                                fontFamily: 'Nosifer-Regular',
                                fontSize: 30.0),
                          ),
                          Text(
                            'cm',
                            style: TextStyle(
                                fontFamily: 'Nosifer-Regular',
                                fontSize: 12.0),
                          )
                        ],
                      ),
                      Slider(
                        value: height,
                        onChanged: (value) {
                          setState(() {
                            height = value;
                          });
                        },
                        max: 200,
                        min: 0,
                      )
                    ],
                  ),
                ),
              ),
            ),
            Expanded(
              child: Padding(
                padding: const EdgeInsets.all(12.0),
                child: Row(
                  children: [
                    Expanded(
                      child: Container(
                        decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(12.0),
                            color: Colors.yellow[100]),
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Text(
                              'Age',
                              style: TextStyle(
                                  fontFamily: 'Nosifer-Regular',
                                  fontSize: 30.0),
                            ),
                            Text(
                              '$age',
                              style: TextStyle(
                                  fontFamily: 'Nosifer-Regular',
                                  fontSize: 30.0),
                            ),
                            Row(
                              mainAxisAlignment: MainAxisAlignment.center,
                              children: [
                                FloatingActionButton(
                                  onPressed: () {
                                    setState(() {
                                      age--;
                                    });
                                  },
                                  heroTag: 'age-',
                                  child: Icon(Icons.remove),
                                  mini: true,
                                ),
                                FloatingActionButton(
                                  onPressed: () {
                                    setState(() {
                                      age++;
                                    });
                                  },
                                  heroTag: 'age+',
                                  child: Icon(Icons.add),
                                  mini: true,
                                )
                              ],
                            )
                          ],
                        ),
                      ),
                    ),
                    SizedBox(
                      width: 24.0,
                    ),
                    Expanded(
                      child: Container(
                        decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(12.0),
                            color: Colors.yellow[100]),
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Text(
                              'weight',
                              style: TextStyle(
                                  fontFamily: 'Nosifer-Regular',
                                  fontSize: 25.0),
                            ),
                            Text(
                              '$weight',
                              style: TextStyle(
                                  fontFamily: 'Nosifer-Regular',
                                  fontSize: 30.0),
                            ),
                            Row(
                              mainAxisAlignment: MainAxisAlignment.center,
                              children: [
                                FloatingActionButton(
                                  onPressed: () {
                                    setState(() {
                                      weight--;
                                    });
                                  },
                                  heroTag: 'weight-',
                                  child: Icon(Icons.remove),
                                  mini: true,
                                ),
                                FloatingActionButton(
                                  onPressed: () {
                                    setState(() {
                                      weight++;
                                    });
                                  },
                                  heroTag: 'weight+',
                                  child: Icon(Icons.add),
                                  mini: true,
                                )
                              ],
                            )
                          ],
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ),
            Container(
              decoration: BoxDecoration(
                borderRadius: BorderRadius.circular(1),
                color: Colors.blue,
              ),
              width: double.infinity,
              child: MaterialButton(
                onPressed: () {
                  double result = weight / pow(height / 100, 2);
                  print(result.round());
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                        builder: (context) => Result(
                          isMale: isMale,
                          result: result.round(),
                          age: age,
                        )),
                  );
                },
                height: 50.0,
                child: Text(
                  'Calculate',
                  style: TextStyle(
                      fontSize: 30.0, fontFamily: 'Nosifer-Regular'),
                ),
              ),
            )
          ],
        ),
      ),
    );
  }
}
//000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
class Result extends StatelessWidget {
  final bool isMale;
  final int result;
  final int age;
  Result({
    required this.isMale,
    required this.result,
    required this.age,
  });
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(
          'Calorie Results',
          style: TextStyle(fontFamily: 'Nosifer-Regular'),
        ),
        leading: IconButton(
          icon: Icon(Icons.arrow_back_ios_new_sharp),
          onPressed: () {
            Navigator.pop(context);
          },
        ),
      ),
      body: Container(
        width: double.infinity,
        height: double.infinity,
        decoration: BoxDecoration(
            image: DecorationImage(image: AssetImage('images/333.jpg',),fit: BoxFit.cover)),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text(
              'Gender : ${isMale ? 'male' : 'female'}',
              style: TextStyle(fontFamily: 'Nosifer-Regular', fontSize: 25.0,),
            ),
            Text(
              'Result : $result',
              style: TextStyle(fontFamily: 'Nosifer-Regular', fontSize: 25.0,),
            ),
            Text(
              'Age : $age',
              style: TextStyle(fontFamily: 'Nosifer-Regular', fontSize: 25.0,),
            )
          ],
        ),
      ),
    );
  }
}

/*كيف أحسب السعرات الحرارية؟
تكمن الإجابة على سؤال كيف أحسب السعرات الحرارية؟ في أنه تعتمد حاسبة السعرات الحرارية هذه على عدة معادلات مختلفة، وتستند نتائج الآلة الحاسبة إلى تقدير المتوسط.

فتختلف صيغة معادلة كاتش مكاردل (Katch-McArdle) اختلافًا طفيفًا، من حيث أنها تحسب كمية الطاقة اليومية (RDEE) والتي تأخذ كتلة الجسم النحيل في الاعتبار وهو ما يمزيها عن باقي المعادلات.

في حين أن معادلة ميفلين سانت جيور (Mifflin-St Jeor) هي المعادلة الأكثر دقة لحساب معدل الأيض الأساس (BMR) باستثناء أن معادلة كاتش مكاردل يمكن أن تكون أكثر دقة للأشخاص الأصغر حجمًا والذين يعرفون نسبة الدهون في الجسم، في الآتي توضيح لهذه المعادلات:

معادلة ميفلين سانت جيور، وهي كالآتي:
للإناث: BMR = 10*W + 6.25*H - 5*A - 161.
للذكور: BMR = 10*W + 6.25*H - 5*A + 5.
معادلة كاتش مكاردل: BMR = 370 + 21.6(1 - F)W.
حيث تعني الأحرف الموجودة في المعادلة ما يأتي:

يعني حرف W: الوزن.
يعني حرف H: الطول.
يعني حرف A: العمر.
يعني حرف F: دهون الجسم في النسبة المئوية.
يُمكنك استخدام حاسبة السعرات الحرارية من ويب طب لقياس السعرات الحرارية التي يحتاجها جسمك.

عوامل تحديد السعرات الحرارية
بعد معرفة الإجابة على سؤال كيف أحسب السعرات الحرارية؟ هناك بعض العوامل التي تتحكم في تحديد السعرات الحرارية المناسبة التي لا بد من معرفتها، وهي تشمل ما يأتي:

1. الحالة الصحية
في حالة الإصابة بمشكلة صحية فينبغي مراعاتها قبل تحديد السعرات الحرارية؛ لأنه في بعض الحالات يجب الامتناع عن تناول مجموعة من الأطعمة وفقًا لوصف الطبيب وحينها يتم تعويضها ببدائل صحية أخرى.

كما أن الإصابة بالنحافة المفرطة لا يعني الإكثار من السعرات الحرارية بل يحتاج إلى منظومة متكاملة لعلاج المشكلة، بحيث يتم تناول أطعمة صحية والابتعاد عن الأطعمة الدهنية بالإضافة إلى ممارسة التمارين الرياضية المناسبة.

2. المرحلة العمرية
تحتاج كل مرحلة عمرية إلى طعام مختلف، ففي مرحلة الطفولة لا يمكن الاستغناء عن الكربوهيدرات والنشويات، حيث أنها مرحلة نمو وتطور الجسم وينبغي الحصول على كافة العناصر الغذائية.

أما في المراحل التالية من العمر فيمكن الاستغناء عن بعض الأطعمة التي تُسبب زيادة الوزن، واستبدالها بأطعمة أخرى صحية ومشبعة.

3. الوزن والطول
قبل تحديد كمية السعرات الحرارية المناسبة للجسم يجب القيام بقياس الوزن والطول، وذلك لمعرفة نسبة الدهون والعضلات والسوائل في الجسم بحيث يسهل تحقيق التوازن بينهم.

كما يجب مراعاة العوامل الأخرى إلى جانب الوزن والطول، مثل: المرحلة العمرية، والحالة الصحية.

4. المجهود البدني المبذول
لا يُمكن تناول كمية سعرات حرارية لشخص يقوم ببذل مجهود كبير يوميًا بنفس مقدار شخص آخر لا يقوم ببذل أي مجهود على مدار اليوم، وذلك لاختلاف مستويات الحرق بينهما.

فالجسم الذي يقوم بالحرق على مدار اليوم سواء في العمل أو ممارسة الرياضة سوف يحتاج إلى كم أكبر من السعرات الحرارية، ولا يقتصر معدل الحرق على المجهود المبذول فحسب بل يرتبط أيضًا بعملية الأيض التي تحدث في الجسم.

5. الجنس
نتيجة اختلاف طبيعة الجسم بين الرجل والمرأة فلا يجب تحديد نسب متساوية من السعرات الحرارية اليومية لهما، حيث أن جسم الرجل يحرق بشكل أفضل ويقوم ببذل مجهود أكبر، لذلك يحتاج إلى كمية سعرات أكثر من المرأة.

6. النتيجة المرغوبة
أيضًا يتم تحديد كمية السعرات الحرارية اليومية وفقًا للهدف الذي يتم وضعه لخسارة أو زيادة الوزن، والوقت المُحدد لتحقيق هذه النتيجة.

فكلما زاد عدد الكيلوغرامات التي ينبغي التخلص منها كلما نقص عدد السعرات الحرارية اليومية التي يجب تناولها.

متوسط السعرات الحرارية اليومية للجسم
بعد الإجابة على سؤال كيف أحسب السعرات الحرارية؟ من المهم معرفة متوسط السعرات الحرارية اليومية للجسم، حيث تحتاج المرأة إلى تناول حوالي 2000 سعرة حرارية في اليوم للحفاظ على وزنها دون زيادة، أما في حالة رغبتها لفقدان الوزن فيُنصح أن تتناول 1500 سعرة حرارية لتفقد كيلوغرام واحد أسبوعيًا.

أما الرجل فيحتاج إلى 2500 سعرة حرارية يوميًا للحفاظ على وزنه، وإذا أراد خسارة كيلوغرام أسبوعيًا فيجب أن يتناول 2000 سعرة حرارية في اليوم.

طرق الحد من السعرات الحرارية دون الشعور بالجوع
بعد معرفة كيف أحسب السعرات الحرارية؟ لا بد من معرفة الطرق التي تُساعد في تقليل السعرات الحرارية يوميًا دون الشعور بالجوع، وتشمل:

1. تناول المزيد من البروتين
يُساعد البروتين في تقليل الشهية والرغبة في تناول الطعام وفي المقابل يزيد من نسبة الحرق بالجسم، ولذلك يُنصح بإضافة البروتين إلى النظام الغذائي لخسارة الوزن.

2. تجنب المشروبات الغازية والعصائر المحلاة
خطوة أخرى هامة لتقليل نسبة السعرات الحرارية اليومية وهي تجنب تناول المشروبات الغازية وأي عصير يُضاف له السكر، حيث أن المشروبات المحلاة تزيد من كمية السعرات الحرارية التي يتم الحصول عليها دون دراية، ممّا يعيق عملية الحرق.

كما أن التحلية الصناعية تبطيء عملية التمثيل الغذائي اللازمة لتعزيز حرق الدهون.

3. شرب الكثير من الماء
يلعب الماء دورًا كبيرًا في زيادة الحرق كما أنه وسيلة فعّالة لكبح الشهية وخاصةً قبل تناول الطعام، ولذلك يُنصح بشرب كميات كبيرة من الماء خلال الحمية الغذائية بحيث لا تقل عن 8 أكواب يوميًا.

4. ممارسة الرياضة
عند تناول كميات أقل من السعرات الحرارية فإن الجسم يعوض ذلك النقص عن طريق تقليل عملية الحرق، وهذا ما يُسبب صعوبة التخلص من الوزن الزائد مع استمرار الحمية الغذائية.

كما أن تقليل السعرات الحرارية يُمكن أن يُسبب فقدان كتلة العضلات وكذلك بطء عملية التمثيل الغذائي، لذا تُعد الرياضة هي الحل الأمثل لتعزيز الحرق أثناء اتباع الرجيم ويُنصح بممارسة الرياضة لمدة 30 دقيقة يوميًا.

5. تنظيم النوم
عادةً ما يزداد الشعور بالجوع في فترة الليل، ويصعب مقاومة تناول الأطعمة المختلفة وهو ما يؤثر على النظام الغذائي المتبع.

كما أن اضطرابات النوم يُمكن أن تؤثر على عملية الأيض وتُسبب صعوبة حرق الدهون والتخلص من الوزن الزائد، ولذلك يُفضل الاعتياد على النوم مبكرًا والاستيقاظ مبكرًا لتقليل الشعور بالجوع ليلًا وتحسين عملية الحرق بالجسم

 */
